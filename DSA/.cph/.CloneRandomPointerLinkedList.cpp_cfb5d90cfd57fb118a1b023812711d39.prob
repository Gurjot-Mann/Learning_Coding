{"name":"Local: CloneRandomPointerLinkedList","url":"c:\\Users\\hp\\Desktop\\Gurjot\\DSA\\CloneRandomPointerLinkedList.cpp","tests":[{"id":1647085924445,"input":"1\n4 2\n1 2 3 4\n1 2 2 4","output":"1"},{"id":1647087737190,"input":"1\n4 2\n1 3 5 9\n1 1 3 4","output":"1"},{"id":1647088083860,"input":"1\n84 47\n10 20 30 32 11 73 58 74 3 20 63 68 84 71 25 79 17 17 60 57 76 10 3 27 27 56 44 20 6 43 67 55 18 52 2 29 80 59 58 82 34 36 21 74 63 45 24 79 18 83 8 9 9 10 75 75 65 74 10 70 33 76 81 6 83 82 74 78 13 4 31 46 39 52 75 57 52 15 8 25 13 15 33 61\n4 52 55 100 33 61 77 69 40 13 27 87 95 40 96 71 35 79 68 2 98 3 18 93 53 57 2 81 87 42 66 90 45 20 41 30 32 18 98 72 82 76 10 28 68 57 98 54 87 66 7 84 20 25 29 72 33 30 4 20 71 69 9 16 41 50 97 24 19 46 47 52 22 56 80 89 65 29 42 51 94 1 35 65 25 15 88 57 44 92 28 66 60 37","output":"1"},{"id":1647088504062,"input":"int count = -1;\n        map<int, int> occ;\n        for(Node* ptr3 = head; ptr3!= NULL; ptr3 = ptr3->next)\n        {  \n            count++;\n            if(ptr3->arb != NULL)\n            {\n                occ[count] = ptr3->arb->data;\n            }\n        }\n        \n        for(auto &values : occ)\n        {\n            Node *ptr2 = res;\n            Node *ptr4 = res;\n            for(int i = 0; i<values.first; i++)\n            {\n                ptr2 = ptr2->next;\n            }\n            while(ptr4->data!= values.second)\n            {\n                ptr4 = ptr4->next;\n            }\n            ptr2->arb = ptr4;\n        }","output":""}],"interactive":false,"memoryLimit":1024,"timeLimit":3000,"srcPath":"c:\\Users\\hp\\Desktop\\Gurjot\\DSA\\CloneRandomPointerLinkedList.cpp","group":"local","local":true}